// <auto-generated />
using System;
using Homework01.TodoApp.DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Homework01.TodoApp.DataModels.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20201004080603_Init_database")]
    partial class Init_database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Homework01.TodoApp.DataModels.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDone");

                    b.Property<string>("Subject")
                        .IsRequired();

                    b.Property<DateTime>("TimeTodo");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Todo");

                    b.HasData(
                        new { Id = 1, CreatedOn = new DateTime(2020, 10, 4, 10, 6, 3, 700, DateTimeKind.Local), Description = "In ramstore mall, in store of Peko, i should buy new shoes", IsDone = false, Subject = "Shoping", TimeTodo = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), UserId = 1 },
                        new { Id = 2, CreatedOn = new DateTime(2020, 10, 4, 10, 6, 3, 703, DateTimeKind.Local), Description = "Dont forget to take some water", IsDone = false, Subject = "Running", TimeTodo = new DateTime(2020, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), UserId = 1 },
                        new { Id = 3, CreatedOn = new DateTime(2020, 10, 4, 10, 6, 3, 703, DateTimeKind.Local), Description = "To build a service for TODO as WebApi", IsDone = false, Subject = "Homework", TimeTodo = new DateTime(2020, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), UserId = 2 }
                    );
                });

            modelBuilder.Entity("Homework01.TodoApp.DataModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new { Id = 1, FirstName = "Bob", LastName = "Bobsky", Password = "(?\\?-??3#>L?q", Username = "bob007" },
                        new { Id = 2, FirstName = "Vladimir", LastName = "Koloski", Password = "(?\\?-??3#>L?q", Username = "vlatko" }
                    );
                });

            modelBuilder.Entity("Homework01.TodoApp.DataModels.Todo", b =>
                {
                    b.HasOne("Homework01.TodoApp.DataModels.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
